import requests
from bs4 import BeautifulSoup
import re
import sys

# for 6th sem - 2018
CONST_VIEWSTATE = """"""
CONST_EVENTVALIDATION = """/wEWnQECxsCMNwKrw9qnCgKCqc+VAQLKlPHFDgLA/IyBCALl6+6qAgLopo/rCQL+gsG3BALi5fmADwLXj7neBwLoppvrCQLvppvrCQKewq+LCALY6+KqAgL+gsW3BAKTuKfBCQK017nqAwLJzpv3BQLMzpv3BQLPzpv3BQLg5f2ADwLG/LyBCAKRuN/ACQL8gvG3BAL8gsG3BALuppPrCQKRuKPBCQKq14XqAwLG/LiBCALPzuf3BQKq17HqAwKtxdr3BgLb6+aqAgLb65qqAgL8gsW3BAL8gv23BALg5fWADwL8gvm3BALopp/rCQKvxa70BgKWuKfBCQLA/ISBCALl6+aqAgLpppvrCQKTuNvACQK0173qAwLJzp/3BQLoppPrCQLXj7HeBwKvxab0BgLA/LiBCALl65qqAgLMzuf3BQL+gv23BAKTuN/ACQK017HqAwLJzpP3BQLXj7XeBwLoppfrCQKvxdr3BgKixa70BgLH/ICBCALA/LyBCAKr17nqAwL+gvG3BAKTuNPACQLi5emADwLXj6neBwLopovrCQL+gvW3BAKTuNfACQK016nqAwLXj63eBwKvxaL0BgLJzov3BQLXj6HeBwLl65aqAgL+gum3BAKuwq+LCAKTuMvACQK0163qAwLJzo/3BQLi5eGADwLA/KiBCAL+gu23BAKTuM/ACQK016HqAwKuwqv+CQLJzoP3BQLi5eWADwLXj6XeBwLopoPrCQLl64qqAgLopofrCQKvxYr0BgLA/OyBCAKsxar0BgKTuIPBCQLJzsf3BQK01+XqAwKjosWyCQLs3ZO5CgLR2dWyDALpvqyACALYz62KDAKAjfS0DwKAxvzOBwL25u3uBwL/5u3uBwKEw+/uBwLM9PumDwLLnPhJAoTjrsIDAo7DtdIEAqbz5rkMAv2OmvwHAuXzrHECqoz6+gMCyc+S1Q4Cjb7w1AQCyc/u1Q4CotbMyAgC9KCI/gQCk5qqiwkCvvPFlQ8CpeS7vgUCk5r+iAkCyc+i1Q4C9KDc/wQCotaAyAgCh/3mvwICwN3dyAsCqJem4QoCjb6E1AQCwN3ZyAsCpeS/vgUCvvOdlQ8Ck5riiAkC9KDA/wQCh/3qvwICotaEyAgCqJeq4QoCjb6I1AQCpeTrvgUCh/3SvwICgYSW4wICzvvA6AEC5uu8jQ4C5uvQkw4C1enQ5gUC5uvEkw4C3L7XvQ0C+a6r2AIC+a7HxgICtPew8AwCxISEgAsCpZ/ziwIE79yfOomdaRS3+pDKsOJ2U8Z9rg=="""
CONST_VIEWSTATE_GENERATOR = """A428D73D"""
LIST_OF_STUDENTS = "http://duexam2.du.ac.in/RSLT_MJ2018/Students/List_Of_Students.aspx?StdType=REG&ExamFlag=CBCS&CourseCode=570&CourseName=(CBCS)%20B.SC.(HONS.)%20COMPUTER%20SCIENCE&Part=III&Sem=VI"
GradeCard = "http://duexam2.du.ac.in/RSLT_MJ2018/Students/Combine_GradeCard.aspx"
# store marks list for all DU
college_sgpa_list = []

# list codes for all CS colleges
all_colleges = [
    "15001570001",
    "15003570001",
    "15009570001",
    "15013570001",
    "15015570001",
    "15020570001",
    "15021570001",
    "15025570001",
    "15029570001",
    "15033570001",
    "15035570001",
    "15044570001",
    "15053570001",
    "15058570001",
    "15059570001",
    "15066570001",
    "15067570001",
    "15068570001",
    "15075570001",
    "15078570001"
    ]

# all_colleges = [
#     "15025570001"
# ]

for col in all_colleges:
    CONST_college_roll_no = col
    VAR_college_Code = CONST_college_roll_no[2:5]

    r= requests.get(LIST_OF_STUDENTS)
    soup = None
    while soup == None:
        soup = BeautifulSoup(r.text, 'html.parser')
    
    students_table = soup.find("table", {"rules": "all"})
    data = []
    all_students = students_table.find_all('tr')

    for student in all_students:
        cols = student.find_all('td')
        cols = [ele.text.strip() for ele in cols]
        data.append([ele for ele in cols if ele]) # Get rid of empty values


    data[0] = ['sno','srollno','sname','sfathername']
    data.pop(0)

    roll_no_pattern = CONST_college_roll_no[:-3] + '...'

    dduc = []
    for student in data:
        if re.match(roll_no_pattern,student[1]):
            dduc.append(student)
        
    # print(*dduc,sep="\n")

    # dduc = [
    #     ['37', '15001570041', 'SONU  KUMAR', 'MR. PREM KUMAR'],
    #     ['39', '15001570043', 'VARAD  SRIVASTAVA', 'MR. RATNESH MOHAN SRIVASTAVA']
    # ]
   
    for VAR_stud in dduc:
        VAR_rollno = VAR_stud[1]
        VAR_sname = VAR_stud[2]
        
        payload = {
            'ddlcollege' : VAR_college_Code,
            'ddlexamtype' : 'Semester',
            'ddlexamflag' : 'CBCS',
            'ddlstream' : 'SC',
            'ddlcourse' : '570',
            'ddlpart' : 'III',
            'ddlsem': 'VI',
            'txtrollno' : VAR_rollno,
            'txtname' : VAR_sname,
            'btnsearch': 'Print Score Cart/Transcript',
            '__EVENTTARGET' : '',
            '__EVENTARGUMENT' : '',
            '__LASTFOCUS':'',
            '__VIEWSTATE': CONST_VIEWSTATE,
            '__EVENTVALIDATION': CONST_EVENTVALIDATION,
            '__VIEWSTATEGENERATOR' : CONST_VIEWSTATE_GENERATOR
            }

        soup = None
        while(soup == None):
            r = requests.post(GradeCard, data=payload)
            # print(r.text)
            soup = BeautifulSoup(r.text, 'html.parser')
            if(soup==None):
                continue
            # print(soup.title.string)
            if(soup.title.string == "Runtime Error"):
                soup = None
                continue
        
        for img in soup.find_all('img'):
            img.decompose()

        #t = soup.find('span', attrs={'id':'lblstatement'}).decompose()
        #t = soup.find('span', attrs={'id':'lbl_sub_head3'}).decompose()
        #t = soup.find('span', attrs={'id':'lbldisclaimer'}).decompose()
        
        sgpa_table = soup.find("span", {"id": "lbl_gr_cgpa"})
        if(sgpa_table == None ):
            continue
        try:
            sgpa_row = [x.strip() for x in sgpa_table.text.replace(',',':').split(':')]
            FINAL_CGPA = float(sgpa_row[1])
            # print([VAR_rollno, VAR_sname, FINAL_CGPA])
        except IndexError:
            continue
        college_sgpa_list.append([VAR_rollno, VAR_sname, FINAL_CGPA])
        
        '''
        # writing result to html file
        
        VAR_filename = "dduc_marks/" + VAR_rollno + '__' + VAR_sname + '__' + '.html'
        with open(VAR_filename, "w") as file:
            file.write(str(soup))
        '''

college_sgpa_list.sort(key = lambda x : x[2], reverse=True)
#print(college_sgpa_list)

# print to file
with open('DU-2015-2018-Batch-Result.txt','w') as f:
    print('{3:<5} {0:15} {1:25} {2:5}'.format("Roll No.","Name","SGPA","S.No"), file=f)
    for i,marks in enumerate(college_sgpa_list):
        print('{3:<5} {0:15} {1:25} {2:<5}'.format(marks[0],marks[1],marks[2], i+1), file=f)


# print(soup.prettify())

# with open("test.html", "w") as file:
#     file.write(str(soup))
